import React, { useState, useEffect } from 'react'
import styled from 'styled-components';
import Slider from './Slider';
import Card from './Card';
import Nav from '../components/Nav';
import axios from 'axios';

const cardDatas = [
    {
      title: "Sleep",
      description: "Improve your",
      imageURL: "https://insighttimer.com/static/media/sleep.ba804918.jpg",
    },
    {
      title: "Anxiety",
      description: "Coping with",
      imageURL:
        "https://insighttimer.com/static/media/anxiety-mountain.9ebb5c46.jpg",
    },
    {
      title: "Stress",
      description: "Managing",
      imageURL: "https://insighttimer.com/static/media/stress-ocean.5a1a74dd.jpg",
    },
    {
      title: "Music",
      description: "Meditation",
      imageURL: "https://insighttimer.com/static/media/music-bamboo.4b8ca527.jpg",
    },
    {
      title: "Kids",
      description: "Meditation for",
      imageURL: "https://insighttimer.com/static/media/kids.50b95572.jpg",
    },
  ];

const Mainsunju = () => {

    const [mainData, setMainData] = useState([]);
    const [offsetIdx, setOffsetIdx] = useState(0);
    const [addedlist, setAddedlist] = useState([]);

    const fetchMainData = async () => {
        const mainData = await axios.get(`http://10.58.1.150:8000/content/main?offset=${offsetIdx}&limit=5`);
        setAddedlist(mainData.data);
        setMainData(mainData.data);
    };

    const handleInfiniteScroll = (e) => {

        const { scrollHeight } = document.body;

        const scrollY = window.scrollY;

        if((scrollHeight - scrollY) <= 1000) {

            console.log("reached!!!");  
            setOffsetIdx(offsetIdx => offsetIdx+=5);
        }
    }

    useEffect(()=>{
        fetchMainData();
        window.addEventListener("scroll", handleInfiniteScroll);
    }, []);

    useEffect(()=>{
        fetchMainData();
        setAddedlist(addedlist.concat(mainData));
        setMainData(addedlist);
    },[offsetIdx])


    console.log("adddeslisssstt     ", addedlist);
    console.log("currentOffsetIdx    ", offsetIdx);

    return (
        <MainWrap>
      <Nav />     
      <ViewDiv />      
      <Webheder>
        <Thelarge>#1</Thelarge>
        <Freesvg>
          <path
            d="M31.948,10.486 L30.429,10.486 C30.1349985,10.486 29.9390005,10.4696668 29.841,10.437 C29.7429995,10.4043332 29.694,10.3553337 29.694,10.29 C29.694,10.2246663 29.6613337,10.1266673 29.596,9.996 C29.4890904,9.996 29.3493807,9.78825828 29.1768681,9.37276973 L29.057,9.065 C28.8283322,8.44433023 28.518002,7.77467026 28.126,7.056 C27.733998,6.33732974 27.2276698,5.66766977 26.607,5.047 C25.9863302,4.42633023 25.2513376,4.116 24.402,4.116 L23.9487498,4.03024994 C23.8099168,4.00575 23.6833339,3.98533342 23.569,3.969 C23.3403322,3.93633317 23.0626683,3.92 22.736,3.92 C21.1679922,3.92 19.8940049,4.49166095 18.914,5.635 C17.9339951,6.77833905 17.1336698,8.26465752 16.513,10.094 C15.8923302,11.9233425 15.4350015,13.9813219 15.141,16.268 C14.8469985,18.5546781 14.6510005,20.8249887 14.553,23.079 C14.4829996,24.689008 14.4296665,26.2406661 14.393,27.7339975 L14.3294375,30.9496284 C14.2988125,32.3338782 14.2590002,33.5159951 14.21,34.496 L15.8515006,34.398 C16.3578327,34.3653334 16.8233312,34.3326668 17.248,34.3 C18.0973376,34.2346663 18.8649966,34.1856668 19.551,34.153 C20.2370034,34.1203332 20.8739971,34.104 21.462,34.104 L23.422,34.104 C23.6833346,34.1693337 23.9609985,34.3326654 24.255,34.594 C24.5490015,34.8553346 24.8103322,35.1493317 25.039,35.476 C25.2676678,35.8026683 25.4473327,36.1293317 25.578,36.456 C25.7086673,36.7826683 25.774,37.0113327 25.774,37.142 C25.774,37.3249342 25.3187038,37.4794099 24.4080987,37.605431 L24.206,37.632 C23.1606614,37.7626673 21.96834,37.8769995 20.629,37.975 C19.557528,38.0534004 18.5174285,38.1108934 17.5086817,38.14748 L16.758,38.171 C15.5166605,38.2036668 14.700002,38.22 14.308,38.22 L14.3447501,39.8574215 C14.4128056,42.5388134 14.5148882,44.981989 14.651,47.187 C14.7910007,49.4550113 14.9429995,51.6269945 15.1069997,53.7029969 L15.19,54.733 C15.386001,57.1176786 15.5656658,59.4533219 15.729,61.74 C15.8923341,64.0266781 16.0066663,66.4439873 16.072,68.992 C15.875999,69.5146693 15.4840029,69.776 14.896,69.776 C14.503998,69.776 13.9813366,69.7106673 13.328,69.58 C13.131999,69.58 13.0013337,69.5473337 12.936,69.482 C12.8779256,69.4239256 12.8327573,69.1722737 12.8004939,68.7270378 L12.7726666,68.2461106 C12.7590555,67.9693515 12.7454444,67.6358806 12.7318334,67.2456962 L12.6361201,64.1958807 C12.6008402,63.2119633 12.5538003,62.0340069 12.495,60.662 L12.3490174,57.5049763 C12.2676335,55.8433888 12.1692947,53.9557361 12.054,51.842 L11.9591848,50.1676657 C11.7675948,46.8967504 11.5052017,43.0122225 11.172,38.514 L10.3815183,38.5804134 C9.23953352,38.6727442 8.29436738,38.7322726 7.546,38.759 L5.49752865,38.8406666 L5.49752865,38.8406666 L2.61537431,38.9825625 C2.064125,39.0131875 1.42100367,39.0529998 0.686,39.102 C0.22866438,39.102 -1.13686838e-13,38.9386683 -1.13686838e-13,38.612 C-1.13686838e-13,37.8279961 0.14699853,37.2563351 0.441,36.897 C0.73500147,36.5376649 1.27399608,36.260001 2.058,36.064 C2.77667026,35.8843324 3.76981863,35.7321161 5.03747079,35.6073473 L7.09250037,35.409 C8.21149772,35.2950003 9.50599265,35.1540008 10.976,34.986 C10.9106663,33.6793268 10.8616668,32.4380059 10.829,31.262 C10.7963332,30.0859941 10.78,28.9426722 10.78,27.832 C10.78,23.1933101 11.0086644,19.2896825 11.466,16.121 C11.9233356,12.9523175 12.4949966,10.3390103 13.181,8.281 C13.8670034,6.22298971 14.6509956,4.63867222 15.533,3.528 C16.4150044,2.41732778 17.2643292,1.60066928 18.081,1.078 C18.8976707,0.55533072 19.6653297,0.24500049 20.384,0.147 L20.8923762,0.0826872933 C21.3701263,0.0275622244 21.7559985,7.10542736e-15 22.05,7.10542736e-15 C23.6180078,7.10542736e-15 25.0226605,0.39199608 26.264,1.176 C27.5053395,1.96000392 28.5669956,2.89099461 29.449,3.969 C30.3310044,5.04700539 31.0169975,6.12499461 31.507,7.203 C31.9970024,8.28100539 32.242,9.1466634 32.242,9.8 C32.242,10.192002 32.144001,10.4206663 31.948,10.486 Z M26.068,31.948 C26.068,31.6213317 26.1986654,31.458 26.46,31.458 C26.7866683,31.458 27.1786644,31.555999 27.636,31.752 C28.0933356,31.948001 28.5833307,32.1766654 29.106,32.438 L29.365174,33.9541675 C29.5012399,34.7667834 29.6108481,35.4537245 29.694,36.015 C29.8246673,36.8970044 29.9226663,37.7299961 29.988,38.514 L30.1056,39.9957592 L30.1056,39.9957592 L30.2447438,41.8759677 C30.3052175,42.6578066 30.3829692,43.5951461 30.478,44.688 C31.0660029,43.2506595 31.7519961,41.9276727 32.536,40.719 C33.3200039,39.5103273 34.2999941,38.4650044 35.476,37.583 C36.6520059,36.7009956 38.0893248,36.0150025 39.788,35.525 C41.4866752,35.0349976 43.5119882,34.79 45.864,34.79 L47.432,34.79 C47.432,35.3780029 47.2523351,35.8353317 46.893,36.162 C46.5336649,36.4886683 45.7006732,36.749999 44.394,36.946 C42.4993239,37.2726683 40.8496737,37.9096619 39.445,38.857 C38.0403263,39.8043381 36.8480049,40.9149936 35.868,42.189 C34.8879951,43.4630064 34.0713366,44.7859931 33.418,46.158 C32.7646634,47.5300069 32.242002,48.8039941 31.85,49.98 C31.7193327,50.8293376 31.5886673,52.1523243 31.458,53.949 C31.3273327,55.7456757 31.262,57.4606585 31.262,59.094 L31.262,60.858 C31.262,61.3806693 31.3273327,61.8053317 31.458,62.132 C31.458,62.4586683 31.2456688,62.719999 30.821,62.916 C30.3963312,63.112001 29.9226693,63.21 29.4,63.21 C29.007998,63.21 28.6650015,63.1610005 28.371,63.063 C28.0769985,62.9649995 27.93,62.7526683 27.93,62.426 L27.93,58.702 C27.93,52.9526379 27.7013356,47.9383547 27.244,43.659 L26.9378217,40.7563958 C26.6092221,37.5979739 26.3192833,34.6618597 26.068,31.948 Z M52.822,35.182 L52.9224297,35.1382644 C53.1168093,35.0605125 53.5079971,34.9280918 54.096,34.741 C54.8146703,34.5123322 55.4679971,34.398 56.056,34.398 C57.7546752,34.398 59.1429946,34.6756639 60.221,35.231 C61.2990054,35.7863361 61.838,36.9459912 61.838,38.71 C61.838,40.6700098 61.4296707,42.515658 60.613,44.247 C59.7963292,45.978342 58.7673395,47.611659 57.526,49.147 C56.2846605,50.682341 54.9126742,52.0869936 53.41,53.361 C51.9073258,54.6350064 50.4700069,55.7619951 49.098,56.742 C49.490002,57.8526722 50.0289966,58.6203312 50.715,59.045 C51.4010034,59.4696688 52.1686624,59.682 53.018,59.682 C53.9326712,59.682 54.8963283,59.4696688 55.909,59.045 C56.9216717,58.6203312 57.9016619,58.0976698 58.849,57.477 C59.7963381,56.8563302 60.6946624,56.2030034 61.544,55.517 L62.1565014,55.0178114 C62.5485013,54.6952282 62.9078331,54.3930628 63.2344994,54.1113131 L64.6769398,52.8556856 C65.6018148,52.0410607 66.3704969,51.3275031 66.983,50.715 C67.7996707,49.8983293 68.6653288,48.9020059 69.58,47.726 C69.6453337,47.6606663 69.7106663,47.628 69.776,47.628 C69.8413337,47.628 69.874,47.725999 69.874,47.922 L69.874,48.51 L69.58,49.882 L69.4711115,50.0610612 C69.2678533,50.3772408 68.7978185,51.0688836 68.061,52.136 C67.1136619,53.5080069 65.8886742,54.9779922 64.386,56.546 C62.8833258,58.1140078 61.1846761,59.5349936 59.29,60.809 C57.3953239,62.0830064 55.4680098,62.72 53.508,62.72 C51.8093248,62.72 50.4210054,62.4423361 49.343,61.887 C48.2649946,61.3316639 47.4156698,60.6946703 46.795,59.976 C46.1743302,59.2573297 45.7333346,58.5713366 45.472,57.918 C45.2106654,57.2646634 45.08,56.8726673 45.08,56.742 C44.7533317,55.6313278 44.59,54.3900069 44.59,53.018 C44.59,51.9726614 44.7369985,50.6170083 45.031,48.951 C45.3250015,47.2849917 45.7986634,45.5700088 46.452,43.806 C47.1053366,42.0419912 47.9546614,40.3760078 49,38.808 C50.0453386,37.2399922 51.3193258,36.0313376 52.822,35.182 Z M48.51,52.528 C49.4900049,52.0053307 50.5679941,51.3030044 51.744,50.421 C52.9200059,49.5389956 54.0306614,48.5100059 55.076,47.334 C56.1213386,46.1579941 56.9869966,44.8676737 57.673,43.463 C58.3590034,42.0583263 58.702,40.5393415 58.702,38.906 C58.702,38.3179971 58.5223351,37.926001 58.163,37.73 C57.8036649,37.533999 57.3953356,37.436 56.938,37.436 C55.9579951,37.436 54.9616717,37.9259951 53.949,38.906 C52.9363283,39.8860049 52.0216707,41.1273258 51.205,42.63 C50.3883292,44.1326742 49.7350024,45.7659912 49.245,47.53 C48.7549975,49.2940088 48.51,50.9599922 48.51,52.528 Z"
            id="free"
            fillRule="nonzero"
          ></path>
          <path
            d="M90.96,69.816 L88.9782343,69.8205999 L87.0197622,69.8345109 C60.0880244,70.09212 39.8017275,73.0704048 24.4668965,80.760607 C23.9238433,81.0329405 23.7043817,81.6939421 23.9767152,82.2369952 C24.2490488,82.7800484 24.9100503,82.9995101 25.4531035,82.7271765 C41.1341277,74.8633633 62.3764273,72.016 90.96,72.016 C91.5675132,72.016 92.06,71.5235132 92.06,70.916 C92.06,70.3084868 91.5675132,69.816 90.96,69.816 Z"
            id="Path-8-Copy"
            fillRule="nonzero"
          ></path>
          <path
            d="M78.556,34.398 C80.2546752,34.398 81.6429946,34.6756639 82.721,35.231 C83.7990054,35.7863361 84.338,36.9459912 84.338,38.71 C84.338,40.6700098 83.9296707,42.515658 83.113,44.247 C82.2963292,45.978342 81.2673395,47.611659 80.026,49.147 C78.7846605,50.682341 77.4126742,52.0869936 75.91,53.361 C74.4073258,54.6350064 72.9700069,55.7619951 71.598,56.742 C71.990002,57.8526722 72.5289966,58.6203312 73.215,59.045 C73.9010034,59.4696688 74.6686624,59.682 75.518,59.682 C76.4326712,59.682 77.3963283,59.4696688 78.409,59.045 C79.4216717,58.6203312 80.4016619,58.0976698 81.349,57.477 C82.2963381,56.8563302 83.1946624,56.2030034 84.044,55.517 L84.6565014,55.0178114 C85.0485013,54.6952282 85.4078331,54.3930628 85.7344994,54.1113131 L87.1769398,52.8556856 C88.1018148,52.0410607 88.8704969,51.3275031 89.483,50.715 C90.2996707,49.8983293 91.1653288,48.9020059 92.08,47.726 C92.1453337,47.6606663 92.2106663,47.628 92.276,47.628 C92.3413337,47.628 92.374,47.725999 92.374,47.922 L92.374,48.51 L92.08,49.882 L91.9711115,50.0610612 C91.7678533,50.3772408 91.2978185,51.0688836 90.561,52.136 C89.6136619,53.5080069 88.3886742,54.9779922 86.886,56.546 C85.3833258,58.1140078 83.6846761,59.5349936 81.79,60.809 C79.8953239,62.0830064 77.9680098,62.72 76.008,62.72 C74.3093248,62.72 72.9210054,62.4423361 71.843,61.887 C70.7649946,61.3316639 69.9156698,60.6946703 69.295,59.976 C68.6743302,59.2573297 68.2333346,58.5713366 67.972,57.918 C67.7106654,57.2646634 67.58,56.8726673 67.58,56.742 C67.2533317,55.6313278 67.09,54.3900069 67.09,53.018 C67.09,51.9726614 67.2369985,50.6170083 67.531,48.951 C67.8250015,47.28499 
                >17 68.2986634,45.5700088 68.952,43.806 C69.6053366,42.0419912 70.4546614,40.3760078 71.5,38.808 C72.5453386,37.2399922 73.8193258,36.0313376 75.322,35.182 L75.4224297,35.1382644 C75.6168093,35.0605125 76.0079971,34.9280918 76.596,34.741 C77.3146703,34.5123322 77.9679971,34.398 78.556,34.398 Z M79.438,37.436 C78.4579951,37.436 77.4616717,37.9259951 76.449,38.906 C75.4363283,39.8860049 74.5216708,41.1273258 73.705,42.63 C72.8883293,44.1326742 72.2350025,45.7659912 71.745,47.53 C71.2549976,49.2940088 71.01,50.9599922 71.01,52.528 C71.9900049,52.0053307 73.0679941,51.3030044 74.244,50.421 C75.4200059,49.5389956 76.5306614,48.5100059 77.576,47.334 C78.6213386,46.1579941 79.4869966,44.8676737 80.173,43.463 C80.8590034,42.0583263 81.202,40.5393415 81.202,38.906 C81.202,38.3179971 81.0223351,37.926001 80.663,37.73 C80.3036649,37.533999 79.8953356,37.436 79.438,37.436 Z"
            id="Combined-Shape"
          ></path>
        </Freesvg>
        <Library>app for sleep, anxiety and stress.</Library>
      </Webheder>
      <ContentsWrap>
        {cardDatas.map((x, y) => {
          if (y === 0 || y === 2 || y === 4) {
            return (
              <Card
                description={x.description}
                title={x.title}
                imageURL={x.imageURL}
                isEvenNum="true"
              />
            );
          }
          return (
            <Card
              description={x.description}
              title={x.title}
              imageURL={x.imageURL}
            />
          );
        })}       
      </ContentsWrap>
      <Slider />
      <Slider />
      <Slider />
      <Slider />
      <Slider />
    </MainWrap>
    )
}

const Essentialwrap = styled.div`
  position: relative;
`;

const Js23wfull = styled.span`
  font-family: ProximaNovaBold;
  font-size: 27px;
`;

const MainWrap = styled.div`
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
`;

const NextButton = styled.button`
  top: 260px;
  right: 15px;
  border: 1px solid black;
  width: 47px;
  height: 47px;
  position: absolute;
  background-color: white;
  border-radius: 20px;
  z-index: 200;
`;

const ButtonLabel = styled.div``;

const PrevButton = styled.button`
  top: 265px;
  left: -20px;
  border: 1px solid black;
  width: 47px;
  height: 47px;
  position: absolute;
  z-index: 200;
  border-radius: 20px;
  background-color: white;
`;

const Essentialfull = styled.div`
  margin: 0, auto;
  margin-top: 100px;
  flex: 1;
  width: 1600px;
  box-sizing: inherit;
  overflow: hidden;
`;

const Library = styled.span`
  display: inline-block;
  font-family: ProximaNovaBold;
  font-size: 47px;
  margin-top: 40px;
`;

const Freesvg = styled.svg`
  width: 93px;
  height: 83px;
  opacity: 0.8;
  overflow: hidden;
  padding-left: 5px;
  padding-right: 10px;
`;

const Webheder = styled.div`
  padding-top: 100px;
  display: flex;
  justify-content: center;
  width: 950px;
  overflow: hidden;
  line-height: 1.2;
  text-align: center;
  `;

const Div = styled.div`
    margin-top: 20px;
    padding-right: 4px;
    font-size: 15px;
    font-family: ProximaNovaRegular;
    color: #373943;

`;

const Thelarge = styled.span`
  font-family: ProximaNovaBold;
  font-size: 47px;
  margin-top: 40px;
`;

const ContentsWrap = styled.section`
  width: 1680px;
  padding-left: 40px;
  padding-right: 40px;
  padding-top: 180px;
  display: flex;
`;


const SwiperWrap = styled.section`
  width: 3200px;
  padding-top: 20px;
  display: flex;
  transform: ${(props) => `translateX(${props.translate}px)`};
`;

const MainDiv = styled.div`
    padding: 0px 40px;
    display: flex;
    justify-content: center;
    flex-direction: column;
    margin: auto;
    --vh: 9.16px;
    align-self: center;
    position: absolute;
    top: 0;
    left: 0;
`;

const directionIcon = styled.div``;

const ViewDiv = styled.div`  
    top: 0;
    left: 0;
`;


export default Mainsunju;
